webpackHotUpdate("content-script",{

/***/ "./src/content-scripts/index.js":
/*!**************************************!*\
  !*** ./src/content-scripts/index.js ***!
  \**************************************/
/*! exports provided: matchClassNames, needAddPreCLElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matchClassNames\", function() { return matchClassNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"needAddPreCLElements\", function() { return needAddPreCLElements; });\n/* harmony import */ var _code_generator_dom_events_to_record__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code-generator/dom-events-to-record */ \"./src/code-generator/dom-events-to-record.js\");\n/* harmony import */ var _code_generator_elements_to_bind_to__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code-generator/elements-to-bind-to */ \"./src/code-generator/elements-to-bind-to.ts\");\n/* harmony import */ var _medv_finder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @medv/finder */ \"./node_modules/@medv/finder/dist/index.js\");\n/* harmony import */ var _medv_finder__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_medv_finder__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _code_generator_pptr_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code-generator/pptr-actions */ \"./src/code-generator/pptr-actions.js\");\n/* harmony import */ var delegate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! delegate */ \"./node_modules/delegate/src/delegate.js\");\n/* harmony import */ var delegate__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(delegate__WEBPACK_IMPORTED_MODULE_4__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // import { finder } from \"../code-generator/alauda-finder\";\n\n\n\n // note: 需要尽量避免aui-input的匹配\n\nvar matchClassNames = [\"aui-search\", \"aui-button\", \"aui-select\", \"aui-accordion\", \"aui-breadcrumb\", \"aui-nav\", \"aui-form\", \"aui-icon\", \"aui-tab\", \"aui-tooltip\", \"aui-option\", \"acl-disabled-container\", \"acl-\", \"rc-\"]; // need add pre command lines elements\n\nvar needAddPreCLElements = [];\n\nvar EventRecorder = /*#__PURE__*/function () {\n  function EventRecorder() {\n    _classCallCheck(this, EventRecorder);\n\n    this.eventLog = [];\n    this.previousEvent = null;\n    this.previousRouter = null;\n  }\n\n  _createClass(EventRecorder, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      chrome.storage.local.get([\"options\"], function (_ref) {\n        var options = _ref.options;\n\n        var _ref2 = options ? options.code : {},\n            dataAttribute = _ref2.dataAttribute;\n\n        var startContext = _this;\n\n        if (dataAttribute) {\n          _this.dataAttribute = dataAttribute;\n        } // yintest 监听 pushstate\n        // const _historyWrap = function(type) {\n        //   const orig = window.history[type];\n        //   const e = new Event(type);\n        //   return function() {\n        //     const rv = orig.apply(this, arguments);\n        //     e.arguments = arguments;\n        //     window.dispatchEvent(e);\n        //     return rv;\n        //   };\n        // };\n        // window.history.pushState = _historyWrap(\"pushState\");\n        // window.history.replaceState = _historyWrap(\"replaceState\");\n        // window.addEventListener(\"pushState\", function(e) {\n        //   console.log(\"change pushState\", e);\n        // });\n        // window.addEventListener(\"replaceState\", function(e) {\n        //   console.log(\"change replaceState\", e);\n        // });\n\n\n        var events = Object.values(_code_generator_dom_events_to_record__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n        if (!window.pptRecorderAddedControlListeners) {\n          _this.addAllListeners(_code_generator_elements_to_bind_to__WEBPACK_IMPORTED_MODULE_1__[\"defaultBindTags\"], events);\n\n          window.pptRecorderAddedControlListeners = true;\n        }\n\n        if (!window.document.pptRecorderAddedControlListeners && chrome.runtime && chrome.runtime.onMessage) {\n          var boundedGetCurrentUrl = _this.getCurrentUrl.bind(_this);\n\n          var boundedGetViewPortSize = _this.getViewPortSize.bind(_this);\n\n          chrome.runtime.onMessage.addListener(boundedGetCurrentUrl);\n          chrome.runtime.onMessage.addListener(boundedGetViewPortSize);\n          window.document.pptRecorderAddedControlListeners = true;\n        }\n\n        chrome.storage.local.get(\"firstRun\", function (items) {\n          if (!items.hasOwnProperty(\"firstRun\")) {\n            chrome.storage.local.set({\n              firstRun: 0\n            });\n            items.firstRun = 0;\n          }\n\n          if (items.hasOwnProperty(\"firstRun\") && !items.firstRun) {\n            startContext.sendMessage({\n              control: \"get-viewport-size\",\n              coordinates: {\n                width: window.innerWidth,\n                height: window.innerHeight\n              }\n            });\n            startContext.sendMessage({\n              control: \"get-current-url\",\n              origin: window.location.origin,\n              href: window.location.href\n            });\n            chrome.storage.local.set({\n              firstRun: 1\n            });\n          }\n        });\n\n        _this.sendMessage({\n          control: \"event-recorder-started\"\n        });\n\n        console.debug(\"Cypress Recorder in-page EventRecorder started\"); // 绑定angular event router end\n\n        if (window._cy_navigate) {\n          console.log(\"_cy_navigate\", window._cy_navigate);\n        }\n      });\n    }\n  }, {\n    key: \"addAllListeners\",\n    value: function addAllListeners(elements, events) {\n      var boundedRecordEvent = this.recordEvent.bind(this);\n      events.forEach(function (type) {\n        window.addEventListener(type, boundedRecordEvent, true);\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(msg) {\n      console.debug(\"sending message\", msg);\n\n      try {\n        // poor man's way of detecting whether this script was injected by an actual extension, or is loaded for\n        // testing purposes\n        if (chrome.runtime && chrome.runtime.onMessage) {\n          chrome.runtime.sendMessage(msg);\n        } else {\n          this.eventLog.push(msg);\n        }\n      } catch (err) {\n        console.debug(\"caught error\", err);\n      }\n    }\n  }, {\n    key: \"getCurrentUrl\",\n    value: function getCurrentUrl(msg) {\n      if (msg.control && msg.control === \"get-current-url\") {\n        console.debug(\"sending current url:\", window.location.href);\n        this.sendMessage({\n          control: msg.control,\n          origin: window.location.origin,\n          href: window.location.href\n        });\n      }\n    }\n  }, {\n    key: \"getViewPortSize\",\n    value: function getViewPortSize(msg) {\n      if (msg.control && msg.control === \"get-viewport-size\") {\n        console.debug(\"sending current viewport size\");\n        this.sendMessage({\n          control: msg.control,\n          coordinates: {\n            width: window.innerWidth,\n            height: window.innerHeight\n          }\n        });\n      }\n    }\n  }, {\n    key: \"recordEvent\",\n    value: function recordEvent(e) {\n      if (this.previousEvent && this.previousEvent.timeStamp === e.timeStamp) return;\n      this.previousEvent = e; // yintest 判断url是否发生了改变\n\n      if (window.location.href !== this.previousRouter) {\n        this.previousRouter = window.location.href;\n        this.sendMessage({\n          action: _code_generator_pptr_actions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].NAVIGATE,\n          href: this.previousRouter\n        });\n      }\n\n      var baseOptions = {\n        className: function className(name) {\n          return matchClassNames.some(function (item) {\n            return name.includes(item);\n          });\n        },\n        tagName: function tagName(name) {\n          return matchClassNames.some(function (item) {\n            return name.includes(item);\n          });\n        },\n        attr: function attr(name, value) {\n          return name.includes(\"data-cy\");\n        },\n        idName: function idName(name) {\n          return !name.includes(\"cdk-\");\n        }\n      };\n      var selector = e.target.hasAttribute && e.target.hasAttribute(this.dataAttribute) ? formatDataSelector(e.target, this.dataAttribute) : _medv_finder__WEBPACK_IMPORTED_MODULE_2___default()(e.target, _objectSpread(_objectSpread({}, baseOptions), {}, {\n        seedMinLength: 20,\n        optimizedMinLength: 20\n      }));\n      console.log(\"e.target\", e.target);\n      var msg = {\n        selector: selector,\n        fullSelector: _medv_finder__WEBPACK_IMPORTED_MODULE_2___default()(e.target, _objectSpread(_objectSpread({}, baseOptions), {}, {\n          seedMinLength: 10,\n          optimizedMinLength: 10\n        })),\n        value: e.target.value,\n        tagName: e.target.tagName,\n        targetType: e.target.type,\n        action: e.type,\n        keyCode: e.keyCode ? e.keyCode : null,\n        href: e.target.href ? e.target.href : null,\n        coordinates: getCoordinates(e),\n        targetObject: e.target,\n        targetText: e.target.innerText\n      };\n      this.sendMessage(msg);\n    }\n  }, {\n    key: \"getEventLog\",\n    value: function getEventLog() {\n      return this.eventLog;\n    }\n  }, {\n    key: \"clearEventLog\",\n    value: function clearEventLog() {\n      this.eventLog = [];\n    }\n  }]);\n\n  return EventRecorder;\n}();\n\nfunction getCoordinates(evt) {\n  var eventsWithCoordinates = {\n    mouseup: true,\n    mousedown: true,\n    mousemove: true,\n    mouseover: true\n  };\n  return eventsWithCoordinates[evt.type] ? {\n    x: evt.clientX,\n    y: evt.clientY\n  } : null;\n}\n\nfunction formatDataSelector(element, attribute) {\n  return \"[\".concat(attribute, \"=\").concat(element.getAttribute(attribute), \"]\");\n}\n\nwindow.eventRecorder = new EventRecorder();\nwindow.eventRecorder.start();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/content-scripts/index.js\n");

/***/ })

})