webpackHotUpdate("content-script",{

/***/ "./src/content-scripts/index.js":
/*!**************************************!*\
  !*** ./src/content-scripts/index.js ***!
  \**************************************/
/*! exports provided: matchClassNames, needAddPreCLElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matchClassNames\", function() { return matchClassNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"needAddPreCLElements\", function() { return needAddPreCLElements; });\n/* harmony import */ var _code_generator_dom_events_to_record__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../code-generator/dom-events-to-record */ \"./src/code-generator/dom-events-to-record.js\");\n/* harmony import */ var _code_generator_elements_to_bind_to__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../code-generator/elements-to-bind-to */ \"./src/code-generator/elements-to-bind-to.ts\");\n/* harmony import */ var _medv_finder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @medv/finder */ \"./node_modules/@medv/finder/dist/index.js\");\n/* harmony import */ var _medv_finder__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_medv_finder__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _code_generator_pptr_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../code-generator/pptr-actions */ \"./src/code-generator/pptr-actions.js\");\n/* harmony import */ var delegate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! delegate */ \"./node_modules/delegate/src/delegate.js\");\n/* harmony import */ var delegate__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(delegate__WEBPACK_IMPORTED_MODULE_4__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n // import { finder } from \"../code-generator/alauda-finder\";\n\n\n\n // note: 需要尽量避免aui-input的匹配\n\nvar matchClassNames = [\"aui-search\", \"aui-button\", \"aui-select\", \"aui-accordion\", \"aui-breadcrumb\", \"aui-nav\", \"aui-form\", \"aui-icon\", \"aui-tab\", \"aui-tooltip\", \"aui-option\", \"acl-disabled-container\", \"acl-\", \"rc-\"]; // need add pre command lines elements\n\nvar needAddPreCLElements = [];\n\nvar EventRecorder = /*#__PURE__*/function () {\n  function EventRecorder() {\n    _classCallCheck(this, EventRecorder);\n\n    this.eventLog = [];\n    this.previousEvent = null;\n    this.previousRouter = null;\n  }\n\n  _createClass(EventRecorder, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      chrome.storage.local.get([\"options\"], function (_ref) {\n        var options = _ref.options;\n\n        var _ref2 = options ? options.code : {},\n            dataAttribute = _ref2.dataAttribute;\n\n        var startContext = _this;\n\n        if (dataAttribute) {\n          _this.dataAttribute = dataAttribute;\n        } // yintest 监听 pushstate\n        // const _historyWrap = function(type) {\n        //   const orig = window.history[type];\n        //   const e = new Event(type);\n        //   return function() {\n        //     const rv = orig.apply(this, arguments);\n        //     e.arguments = arguments;\n        //     window.dispatchEvent(e);\n        //     return rv;\n        //   };\n        // };\n        // window.history.pushState = _historyWrap(\"pushState\");\n        // window.history.replaceState = _historyWrap(\"replaceState\");\n        // window.addEventListener(\"pushState\", function(e) {\n        //   console.log(\"change pushState\", e);\n        // });\n        // window.addEventListener(\"replaceState\", function(e) {\n        //   console.log(\"change replaceState\", e);\n        // });\n\n\n        var events = Object.values(_code_generator_dom_events_to_record__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n        if (!window.pptRecorderAddedControlListeners) {\n          _this.addAllListeners(_code_generator_elements_to_bind_to__WEBPACK_IMPORTED_MODULE_1__[\"defaultBindTags\"], events);\n\n          window.pptRecorderAddedControlListeners = true;\n        }\n\n        if (!window.document.pptRecorderAddedControlListeners && chrome.runtime && chrome.runtime.onMessage) {\n          var boundedGetCurrentUrl = _this.getCurrentUrl.bind(_this);\n\n          var boundedGetViewPortSize = _this.getViewPortSize.bind(_this);\n\n          chrome.runtime.onMessage.addListener(boundedGetCurrentUrl);\n          chrome.runtime.onMessage.addListener(boundedGetViewPortSize);\n          window.document.pptRecorderAddedControlListeners = true;\n        }\n\n        chrome.storage.local.get(\"firstRun\", function (items) {\n          if (!items.hasOwnProperty(\"firstRun\")) {\n            chrome.storage.local.set({\n              firstRun: 0\n            });\n            items.firstRun = 0;\n          }\n\n          if (items.hasOwnProperty(\"firstRun\") && !items.firstRun) {\n            startContext.sendMessage({\n              control: \"get-viewport-size\",\n              coordinates: {\n                width: window.innerWidth,\n                height: window.innerHeight\n              }\n            });\n            startContext.sendMessage({\n              control: \"get-current-url\",\n              origin: window.location.origin,\n              href: window.location.href\n            });\n            chrome.storage.local.set({\n              firstRun: 1\n            });\n          }\n        });\n\n        _this.sendMessage({\n          control: \"event-recorder-started\"\n        });\n\n        console.debug(\"Cypress Recorder in-page EventRecorder started\"); // 绑定angular event router end\n\n        if (window._cy_navigate) {\n          console.log(\"_cy_navigate\", window._cy_navigate);\n        }\n      });\n    }\n  }, {\n    key: \"addAllListeners\",\n    value: function addAllListeners(elements, events) {\n      var boundedRecordEvent = this.recordEvent.bind(this);\n      events.forEach(function (type) {\n        window.addEventListener(type, boundedRecordEvent, true);\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(msg) {\n      console.debug(\"sending message\", msg);\n\n      try {\n        // poor man's way of detecting whether this script was injected by an actual extension, or is loaded for\n        // testing purposes\n        if (chrome.runtime && chrome.runtime.onMessage) {\n          chrome.runtime.sendMessage(msg);\n        } else {\n          this.eventLog.push(msg);\n        }\n      } catch (err) {\n        console.debug(\"caught error\", err);\n      }\n    }\n  }, {\n    key: \"getCurrentUrl\",\n    value: function getCurrentUrl(msg) {\n      if (msg.control && msg.control === \"get-current-url\") {\n        console.debug(\"sending current url:\", window.location.href);\n        this.sendMessage({\n          control: msg.control,\n          origin: window.location.origin,\n          href: window.location.href\n        });\n      }\n    }\n  }, {\n    key: \"getViewPortSize\",\n    value: function getViewPortSize(msg) {\n      if (msg.control && msg.control === \"get-viewport-size\") {\n        console.debug(\"sending current viewport size\");\n        this.sendMessage({\n          control: msg.control,\n          coordinates: {\n            width: window.innerWidth,\n            height: window.innerHeight\n          }\n        });\n      }\n    }\n  }, {\n    key: \"recordEvent\",\n    value: function recordEvent(e) {\n      if (this.previousEvent && this.previousEvent.timeStamp === e.timeStamp) return;\n      this.previousEvent = e; // yintest 判断url是否发生了改变\n\n      if (window.location.href !== this.previousRouter) {\n        this.previousRouter = window.location.href;\n        this.sendMessage({\n          action: _code_generator_pptr_actions__WEBPACK_IMPORTED_MODULE_3__[\"default\"].NAVIGATE,\n          href: this.previousRouter\n        });\n      }\n\n      var baseOptions = {\n        className: function className(name) {\n          return matchClassNames.some(function (item) {\n            return name.includes(item);\n          });\n        },\n        tagName: function tagName(name) {\n          return matchClassNames.some(function (item) {\n            return name.includes(item);\n          });\n        },\n        attr: function attr(name, value) {\n          return name.includes(\"data-cy\");\n        },\n        idName: function idName(name) {\n          return !name.includes(\"cdk-\");\n        }\n      };\n      var selector = e.target.hasAttribute && e.target.hasAttribute(this.dataAttribute) ? formatDataSelector(e.target, this.dataAttribute) : _medv_finder__WEBPACK_IMPORTED_MODULE_2___default()(e.target, _objectSpread(_objectSpread({}, baseOptions), {}, {\n        seedMinLength: 1,\n        optimizedMinLength: 2\n      }));\n      console.log(\"e.target\", e.target);\n      var msg = {\n        selector: selector,\n        fullSelector: _medv_finder__WEBPACK_IMPORTED_MODULE_2___default()(e.target, _objectSpread(_objectSpread({}, baseOptions), {}, {\n          seedMinLength: 10,\n          optimizedMinLength: 10\n        })),\n        value: e.target.value,\n        tagName: e.target.tagName,\n        targetType: e.target.type,\n        action: e.type,\n        keyCode: e.keyCode ? e.keyCode : null,\n        href: e.target.href ? e.target.href : null,\n        coordinates: getCoordinates(e),\n        targetObject: e.target,\n        targetText: e.target.innerText\n      };\n      this.sendMessage(msg);\n    }\n  }, {\n    key: \"getEventLog\",\n    value: function getEventLog() {\n      return this.eventLog;\n    }\n  }, {\n    key: \"clearEventLog\",\n    value: function clearEventLog() {\n      this.eventLog = [];\n    }\n  }]);\n\n  return EventRecorder;\n}();\n\nfunction getCoordinates(evt) {\n  var eventsWithCoordinates = {\n    mouseup: true,\n    mousedown: true,\n    mousemove: true,\n    mouseover: true\n  };\n  return eventsWithCoordinates[evt.type] ? {\n    x: evt.clientX,\n    y: evt.clientY\n  } : null;\n}\n\nfunction formatDataSelector(element, attribute) {\n  return \"[\".concat(attribute, \"=\").concat(element.getAttribute(attribute), \"]\");\n}\n\nwindow.eventRecorder = new EventRecorder();\nwindow.eventRecorder.start();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udGVudC1zY3JpcHRzL2luZGV4LmpzPzllNmUiXSwibmFtZXMiOlsibWF0Y2hDbGFzc05hbWVzIiwibmVlZEFkZFByZUNMRWxlbWVudHMiLCJFdmVudFJlY29yZGVyIiwiZXZlbnRMb2ciLCJwcmV2aW91c0V2ZW50IiwicHJldmlvdXNSb3V0ZXIiLCJjaHJvbWUiLCJzdG9yYWdlIiwibG9jYWwiLCJnZXQiLCJvcHRpb25zIiwiY29kZSIsImRhdGFBdHRyaWJ1dGUiLCJzdGFydENvbnRleHQiLCJldmVudHMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJldmVudHNUb1JlY29yZCIsIndpbmRvdyIsInBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzIiwiYWRkQWxsTGlzdGVuZXJzIiwiZGVmYXVsdEJpbmRUYWdzIiwiZG9jdW1lbnQiLCJydW50aW1lIiwib25NZXNzYWdlIiwiYm91bmRlZEdldEN1cnJlbnRVcmwiLCJnZXRDdXJyZW50VXJsIiwiYmluZCIsImJvdW5kZWRHZXRWaWV3UG9ydFNpemUiLCJnZXRWaWV3UG9ydFNpemUiLCJhZGRMaXN0ZW5lciIsIml0ZW1zIiwiaGFzT3duUHJvcGVydHkiLCJzZXQiLCJmaXJzdFJ1biIsInNlbmRNZXNzYWdlIiwiY29udHJvbCIsImNvb3JkaW5hdGVzIiwid2lkdGgiLCJpbm5lcldpZHRoIiwiaGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJvcmlnaW4iLCJsb2NhdGlvbiIsImhyZWYiLCJjb25zb2xlIiwiZGVidWciLCJfY3lfbmF2aWdhdGUiLCJsb2ciLCJlbGVtZW50cyIsImJvdW5kZWRSZWNvcmRFdmVudCIsInJlY29yZEV2ZW50IiwiZm9yRWFjaCIsInR5cGUiLCJhZGRFdmVudExpc3RlbmVyIiwibXNnIiwicHVzaCIsImVyciIsImUiLCJ0aW1lU3RhbXAiLCJhY3Rpb24iLCJwcHRyQWN0aW9ucyIsIk5BVklHQVRFIiwiYmFzZU9wdGlvbnMiLCJjbGFzc05hbWUiLCJuYW1lIiwic29tZSIsIml0ZW0iLCJpbmNsdWRlcyIsInRhZ05hbWUiLCJhdHRyIiwidmFsdWUiLCJpZE5hbWUiLCJzZWxlY3RvciIsInRhcmdldCIsImhhc0F0dHJpYnV0ZSIsImZvcm1hdERhdGFTZWxlY3RvciIsImZpbmRlciIsInNlZWRNaW5MZW5ndGgiLCJvcHRpbWl6ZWRNaW5MZW5ndGgiLCJmdWxsU2VsZWN0b3IiLCJ0YXJnZXRUeXBlIiwia2V5Q29kZSIsImdldENvb3JkaW5hdGVzIiwidGFyZ2V0T2JqZWN0IiwidGFyZ2V0VGV4dCIsImlubmVyVGV4dCIsImV2dCIsImV2ZW50c1dpdGhDb29yZGluYXRlcyIsIm1vdXNldXAiLCJtb3VzZWRvd24iLCJtb3VzZW1vdmUiLCJtb3VzZW92ZXIiLCJ4IiwiY2xpZW50WCIsInkiLCJjbGllbnRZIiwiZWxlbWVudCIsImF0dHJpYnV0ZSIsImdldEF0dHJpYnV0ZSIsImV2ZW50UmVjb3JkZXIiLCJzdGFydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0NBRUE7O0FBQ0E7QUFDQTtDQUlBOztBQUNPLElBQU1BLGVBQWUsR0FBRyxDQUM3QixZQUQ2QixFQUU3QixZQUY2QixFQUc3QixZQUg2QixFQUk3QixlQUo2QixFQUs3QixnQkFMNkIsRUFNN0IsU0FONkIsRUFPN0IsVUFQNkIsRUFRN0IsVUFSNkIsRUFTN0IsU0FUNkIsRUFVN0IsYUFWNkIsRUFXN0IsWUFYNkIsRUFZN0Isd0JBWjZCLEVBYTdCLE1BYjZCLEVBYzdCLEtBZDZCLENBQXhCLEMsQ0FpQlA7O0FBQ08sSUFBTUMsb0JBQW9CLEdBQUcsRUFBN0I7O0lBS0RDLGE7QUFDSiwyQkFBYztBQUFBOztBQUNaLFNBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxTQUFLQyxhQUFMLEdBQXFCLElBQXJCO0FBQ0EsU0FBS0MsY0FBTCxHQUFzQixJQUF0QjtBQUNEOzs7O1dBRUQsaUJBQVE7QUFBQTs7QUFDTkMsWUFBTSxDQUFDQyxPQUFQLENBQWVDLEtBQWYsQ0FBcUJDLEdBQXJCLENB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Q1M7QUFBekIsR0FERyxHQUVILElBRko7QUFHRDs7QUFFRCxTQUFTcEIsa0JBQVQsQ0FBNEJxQixPQUE1QixFQUFxQ0MsU0FBckMsRUFBZ0Q7QUFDOUMsb0JBQVdBLFNBQVgsY0FBd0JELE9BQU8sQ0FBQ0UsWUFBUixDQUFxQkQsU0FBckIsQ0FBeEI7QUFDRDs7QUFFRGhGLE1BQU0sQ0FBQ2tGLGFBQVAsR0FBdUIsSUFBSWxHLGFBQUosRUFBdkI7QUFDQWdCLE1BQU0sQ0FBQ2tGLGFBQVAsQ0FBcUJDLEtBQXJCIiwiZmlsZSI6Ii4vc3JjL2NvbnRlbnQtc2NyaXB0cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBldmVudHNUb1JlY29yZCBmcm9tIFwiLi4vY29kZS1nZW5lcmF0b3IvZG9tLWV2ZW50cy10by1yZWNvcmRcIjtcbmltcG9ydCB7IGRlZmF1bHRCaW5kVGFncyB9IGZyb20gXCIuLi9jb2RlLWdlbmVyYXRvci9lbGVtZW50cy10by1iaW5kLXRvXCI7XG4vLyBpbXBvcnQgeyBmaW5kZXIgfSBmcm9tIFwiLi4vY29kZS1nZW5lcmF0b3IvYWxhdWRhLWZpbmRlclwiO1xuaW1wb3J0IGZpbmRlciBmcm9tIFwiQG1lZHYvZmluZGVyXCI7XG5pbXBvcnQgcHB0ckFjdGlvbnMgZnJvbSBcIi4uL2NvZGUtZ2VuZXJhdG9yL3BwdHItYWN0aW9uc1wiO1xuXG5pbXBvcnQgKiBhcyBkZWxlZ2F0ZSBmcm9tIFwiZGVsZWdhdGVcIjtcblxuLy8gbm90ZTog6ZyA6KaB5bC96YeP6YG/5YWNYXVpLWlucHV055qE5Yy56YWNXG5leHBvcnQgY29uc3QgbWF0Y2hDbGFzc05hbWVzID0gW1xuICBcImF1aS1zZWFyY2hcIixcbiAgXCJhdWktYnV0dG9uXCIsXG4gIFwiYXVpLXNlbGVjdFwiLFxuICBcImF1aS1hY2NvcmRpb25cIixcbiAgXCJhdWktYnJlYWRjcnVtYlwiLFxuICBcImF1aS1uYXZcIixcbiAgXCJhdWktZm9ybVwiLFxuICBcImF1aS1pY29uXCIsXG4gIFwiYXVpLXRhYlwiLFxuICBcImF1aS10b29sdGlwXCIsXG4gIFwiYXVpLW9wdGlvblwiLFxuICBcImFjbC1kaXNhYmxlZC1jb250YWluZXJcIixcbiAgXCJhY2wtXCIsXG4gIFwicmMtXCIsXG5dO1xuXG4vLyBuZWVkIGFkZCBwcmUgY29tbWFuZCBsaW5lcyBlbGVtZW50c1xuZXhwb3J0IGNvbnN0IG5lZWRBZGRQcmVDTEVsZW1lbnRzID0gW1xuICBcbl1cblxuXG5jbGFzcyBFdmVudFJlY29yZGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5ldmVudExvZyA9IFtdO1xuICAgIHRoaXMucHJldmlvdXNFdmVudCA9IG51bGw7XG4gICAgdGhpcy5wcmV2aW91c1JvdXRlciA9IG51bGw7XG4gIH1cblxuICBzdGFydCgpIHtcbiAgICBjaHJvbWUuc3RvcmFnZS5sb2NhbC5nZXQoW1wib3B0aW9uc1wiXSwgKHsgb3B0aW9ucyB9KSA9PiB7XG4gICAgICBjb25zdCB7IGRhdGFBdHRyaWJ1dGUgfSA9IG9wdGlvbnMgPyBvcHRpb25zLmNvZGUgOiB7fTtcbiAgICAgIGNvbnN0IHN0YXJ0Q29udGV4dCA9IHRoaXM7XG4gICAgICBpZiAoZGF0YUF0dHJpYnV0ZSkge1xuICAgICAgICB0aGlzLmRhdGFBdHRyaWJ1dGUgPSBkYXRhQXR0cmlidXRlO1xuICAgICAgfVxuXG4gICAgICAvLyB5aW50ZXN0IOebkeWQrCBwdXNoc3RhdGVcbiAgICAgIC8vIGNvbnN0IF9oaXN0b3J5V3JhcCA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIC8vICAgY29uc3Qgb3JpZyA9IHdpbmRvdy5oaXN0b3J5W3R5cGVdO1xuICAgICAgLy8gICBjb25zdCBlID0gbmV3IEV2ZW50KHR5cGUpO1xuICAgICAgLy8gICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAvLyAgICAgY29uc3QgcnYgPSBvcmlnLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAvLyAgICAgZS5hcmd1bWVudHMgPSBhcmd1bWVudHM7XG4gICAgICAvLyAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQoZSk7XG4gICAgICAvLyAgICAgcmV0dXJuIHJ2O1xuICAgICAgLy8gICB9O1xuICAgICAgLy8gfTtcbiAgICAgIC8vIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZSA9IF9oaXN0b3J5V3JhcChcInB1c2hTdGF0ZVwiKTtcbiAgICAgIC8vIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSA9IF9oaXN0b3J5V3JhcChcInJlcGxhY2VTdGF0ZVwiKTtcblxuICAgICAgLy8gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJwdXNoU3RhdGVcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgLy8gICBjb25zb2xlLmxvZyhcImNoYW5nZSBwdXNoU3RhdGVcIiwgZSk7XG4gICAgICAvLyB9KTtcbiAgICAgIC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVwbGFjZVN0YXRlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIC8vICAgY29uc29sZS5sb2coXCJjaGFuZ2UgcmVwbGFjZVN0YXRlXCIsIGUpO1xuICAgICAgLy8gfSk7XG5cbiAgICAgIGNvbnN0IGV2ZW50cyA9IE9iamVjdC52YWx1ZXMoZXZlbnRzVG9SZWNvcmQpO1xuICAgICAgaWYgKCF3aW5kb3cucHB0UmVjb3JkZXJBZGRlZENvbnRyb2xMaXN0ZW5lcnMpIHtcbiAgICAgICAgdGhpcy5hZGRBbGxMaXN0ZW5lcnMoZGVmYXVsdEJpbmRUYWdzLCBldmVudHMpO1xuICAgICAgICB3aW5kb3cucHB0UmVjb3JkZXJBZGRlZENvbnRyb2xMaXN0ZW5lcnMgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgICF3aW5kb3cuZG9jdW1lbnQucHB0UmVjb3JkZXJBZGRlZENvbnRyb2xMaXN0ZW5lcnMgJiZcbiAgICAgICAgY2hyb21lLnJ1bnRpbWUgJiZcbiAgICAgICAgY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlXG4gICAgICApIHtcbiAgICAgICAgY29uc3QgYm91bmRlZEdldEN1cnJlbnRVcmwgPSB0aGlzLmdldEN1cnJlbnRVcmwuYmluZCh0aGlzKTtcbiAgICAgICAgY29uc3QgYm91bmRlZEdldFZpZXdQb3J0U2l6ZSA9IHRoaXMuZ2V0Vmlld1BvcnRTaXplLmJpbmQodGhpcyk7XG4gICAgICAgIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihib3VuZGVkR2V0Q3VycmVudFVybCk7XG4gICAgICAgIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihib3VuZGVkR2V0Vmlld1BvcnRTaXplKTtcbiAgICAgICAgd2luZG93LmRvY3VtZW50LnBwdFJlY29yZGVyQWRkZWRDb250cm9sTGlzdGVuZXJzID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuZ2V0KFwiZmlyc3RSdW5cIiwgZnVuY3Rpb24oaXRlbXMpIHtcbiAgICAgICAgaWYgKCFpdGVtcy5oYXNPd25Qcm9wZXJ0eShcImZpcnN0UnVuXCIpKSB7XG4gICAgICAgICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgZmlyc3RSdW46IDAgfSk7XG4gICAgICAgICAgaXRlbXMuZmlyc3RSdW4gPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGl0ZW1zLmhhc093blByb3BlcnR5KFwiZmlyc3RSdW5cIikgJiYgIWl0ZW1zLmZpcnN0UnVuKSB7XG4gICAgICAgICAgc3RhcnRDb250ZXh0LnNlbmRNZXNzYWdlKHtcbiAgICAgICAgICAgIGNvbnRyb2w6IFwiZ2V0LXZpZXdwb3J0LXNpemVcIixcbiAgICAgICAgICAgIGNvb3JkaW5hdGVzOiB7XG4gICAgICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHN0YXJ0Q29udGV4dC5zZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICBjb250cm9sOiBcImdldC1jdXJyZW50LXVybFwiLFxuICAgICAgICAgICAgb3JpZ2luOiB3aW5kb3cubG9jYXRpb24ub3JpZ2luLFxuICAgICAgICAgICAgaHJlZjogd2luZG93LmxvY2F0aW9uLmhyZWYsXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgY2hyb21lLnN0b3JhZ2UubG9jYWwuc2V0KHsgZmlyc3RSdW46IDEgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnNlbmRNZXNzYWdlKHsgY29udHJvbDogXCJldmVudC1yZWNvcmRlci1zdGFydGVkXCIgfSk7XG4gICAgICBjb25zb2xlLmRlYnVnKFwiQ3lwcmVzcyBSZWNvcmRlciBpbi1wYWdlIEV2ZW50UmVjb3JkZXIgc3RhcnRlZFwiKTtcblxuICAgICAgLy8g57uR5a6aYW5ndWxhciBldmVudCByb3V0ZXIgZW5kXG4gICAgICBpZiAod2luZG93Ll9jeV9uYXZpZ2F0ZSkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIl9jeV9uYXZpZ2F0ZVwiLCB3aW5kb3cuX2N5X25hdmlnYXRlKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGFkZEFsbExpc3RlbmVycyhlbGVtZW50cywgZXZlbnRzKSB7XG4gICAgY29uc3QgYm91bmRlZFJlY29yZEV2ZW50ID0gdGhpcy5yZWNvcmRFdmVudC5iaW5kKHRoaXMpO1xuICAgIGV2ZW50cy5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBib3VuZGVkUmVjb3JkRXZlbnQsIHRydWUpO1xuICAgIH0pO1xuICB9XG5cbiAgc2VuZE1lc3NhZ2UobXNnKSB7XG4gICAgY29uc29sZS5kZWJ1ZyhcInNlbmRpbmcgbWVzc2FnZVwiLCBtc2cpO1xuICAgIHRyeSB7XG4gICAgICAvLyBwb29yIG1hbidzIHdheSBvZiBkZXRlY3Rpbmcgd2hldGhlciB0aGlzIHNjcmlwdCB3YXMgaW5qZWN0ZWQgYnkgYW4gYWN0dWFsIGV4dGVuc2lvbiwgb3IgaXMgbG9hZGVkIGZvclxuICAgICAgLy8gdGVzdGluZyBwdXJwb3Nlc1xuICAgICAgaWYgKGNocm9tZS5ydW50aW1lICYmIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZSkge1xuICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShtc2cpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5ldmVudExvZy5wdXNoKG1zZyk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmRlYnVnKFwiY2F1Z2h0IGVycm9yXCIsIGVycik7XG4gICAgfVxuICB9XG5cbiAgZ2V0Q3VycmVudFVybChtc2cpIHtcbiAgICBpZiAobXNnLmNvbnRyb2wgJiYgbXNnLmNvbnRyb2wgPT09IFwiZ2V0LWN1cnJlbnQtdXJsXCIpIHtcbiAgICAgIGNvbnNvbGUuZGVidWcoXCJzZW5kaW5nIGN1cnJlbnQgdXJsOlwiLCB3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgICB0aGlzLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgY29udHJvbDogbXNnLmNvbnRyb2wsXG4gICAgICAgIG9yaWdpbjogd2luZG93LmxvY2F0aW9uLm9yaWdpbixcbiAgICAgICAgaHJlZjogd2luZG93LmxvY2F0aW9uLmhyZWYsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXRWaWV3UG9ydFNpemUobXNnKSB7XG4gICAgaWYgKG1zZy5jb250cm9sICYmIG1zZy5jb250cm9sID09PSBcImdldC12aWV3cG9ydC1zaXplXCIpIHtcbiAgICAgIGNvbnNvbGUuZGVidWcoXCJzZW5kaW5nIGN1cnJlbnQgdmlld3BvcnQgc2l6ZVwiKTtcbiAgICAgIHRoaXMuc2VuZE1lc3NhZ2Uoe1xuICAgICAgICBjb250cm9sOiBtc2cuY29udHJvbCxcbiAgICAgICAgY29vcmRpbmF0ZXM6IHsgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLCBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCB9LFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmVjb3JkRXZlbnQoZSkge1xuICAgIGlmICh0aGlzLnByZXZpb3VzRXZlbnQgJiYgdGhpcy5wcmV2aW91c0V2ZW50LnRpbWVTdGFtcCA9PT0gZS50aW1lU3RhbXApXG4gICAgICByZXR1cm47XG4gICAgdGhpcy5wcmV2aW91c0V2ZW50ID0gZTtcbiAgICAvLyB5aW50ZXN0IOWIpOaWrXVybOaYr+WQpuWPkeeUn+S6huaUueWPmFxuICAgIGlmICh3aW5kb3cubG9jYXRpb24uaHJlZiAhPT0gdGhpcy5wcmV2aW91c1JvdXRlcikge1xuICAgICAgdGhpcy5wcmV2aW91c1JvdXRlciA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuXG4gICAgICB0aGlzLnNlbmRNZXNzYWdlKHtcbiAgICAgICAgYWN0aW9uOiBwcHRyQWN0aW9ucy5OQVZJR0FURSxcbiAgICAgICAgaHJlZjogdGhpcy5wcmV2aW91c1JvdXRlcixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGJhc2VPcHRpb25zID0ge1xuICAgICAgY2xhc3NOYW1lOiAobmFtZSkgPT4gbWF0Y2hDbGFzc05hbWVzLnNvbWUoKGl0ZW0pID0+IG5hbWUuaW5jbHVkZXMoaXRlbSkpLFxuICAgICAgdGFnTmFtZTogKG5hbWUpID0+IG1hdGNoQ2xhc3NOYW1lcy5zb21lKChpdGVtKSA9PiBuYW1lLmluY2x1ZGVzKGl0ZW0pKSxcbiAgICAgIGF0dHI6IChuYW1lLCB2YWx1ZSkgPT4gbmFtZS5pbmNsdWRlcyhcImRhdGEtY3lcIiksXG4gICAgICBpZE5hbWU6IChuYW1lKSA9PiAhbmFtZS5pbmNsdWRlcyhcImNkay1cIiksXG4gICAgfTtcblxuICAgIGNvbnN0IHNlbGVjdG9yID1cbiAgICAgIGUudGFyZ2V0Lmhhc0F0dHJpYnV0ZSAmJiBlLnRhcmdldC5oYXNBdHRyaWJ1dGUodGhpcy5kYXRhQXR0cmlidXRlKVxuICAgICAgICA/IGZvcm1hdERhdGFTZWxlY3RvcihlLnRhcmdldCwgdGhpcy5kYXRhQXR0cmlidXRlKVxuICAgICAgICA6IGZpbmRlcihlLnRhcmdldCwge1xuICAgICAgICAgICAgLi4uYmFzZU9wdGlvbnMsXG4gICAgICAgICAgICBzZWVkTWluTGVuZ3RoOiAxLFxuICAgICAgICAgICAgb3B0aW1pemVkTWluTGVuZ3RoOiAyLFxuICAgICAgICAgIH0pO1xuXG4gICAgY29uc29sZS5sb2coXCJlLnRhcmdldFwiLCBlLnRhcmdldCk7XG5cbiAgICBjb25zdCBtc2cgPSB7XG4gICAgICBzZWxlY3Rvcjogc2VsZWN0b3IsXG4gICAgICBmdWxsU2VsZWN0b3I6IGZpbmRlcihlLnRhcmdldCwge1xuICAgICAgICAuLi5iYXNlT3B0aW9ucyxcbiAgICAgICAgc2VlZE1pbkxlbmd0aDogMTAsXG4gICAgICAgIG9wdGltaXplZE1pbkxlbmd0aDogMTAsXG4gICAgICB9KSxcbiAgICAgIHZhbHVlOiBlLnRhcmdldC52YWx1ZSxcbiAgICAgIHRhZ05hbWU6IGUudGFyZ2V0LnRhZ05hbWUsXG4gICAgICB0YXJnZXRUeXBlOiBlLnRhcmdldC50eXBlLFxuICAgICAgYWN0aW9uOiBlLnR5cGUsXG4gICAgICBrZXlDb2RlOiBlLmtleUNvZGUgPyBlLmtleUNvZGUgOiBudWxsLFxuICAgICAgaHJlZjogZS50YXJnZXQuaHJlZiA/IGUudGFyZ2V0LmhyZWYgOiBudWxsLFxuICAgICAgY29vcmRpbmF0ZXM6IGdldENvb3JkaW5hdGVzKGUpLFxuICAgICAgdGFyZ2V0T2JqZWN0OiBlLnRhcmdldCxcbiAgICAgIHRhcmdldFRleHQ6IGUudGFyZ2V0LmlubmVyVGV4dCxcbiAgICB9O1xuXG4gICAgdGhpcy5zZW5kTWVzc2FnZShtc2cpO1xuICB9XG5cbiAgZ2V0RXZlbnRMb2coKSB7XG4gICAgcmV0dXJuIHRoaXMuZXZlbnRMb2c7XG4gIH1cblxuICBjbGVhckV2ZW50TG9nKCkge1xuICAgIHRoaXMuZXZlbnRMb2cgPSBbXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRDb29yZGluYXRlcyhldnQpIHtcbiAgY29uc3QgZXZlbnRzV2l0aENvb3JkaW5hdGVzID0ge1xuICAgIG1vdXNldXA6IHRydWUsXG4gICAgbW91c2Vkb3duOiB0cnVlLFxuICAgIG1vdXNlbW92ZTogdHJ1ZSxcbiAgICBtb3VzZW92ZXI6IHRydWUsXG4gIH07XG4gIHJldHVybiBldmVudHNXaXRoQ29vcmRpbmF0ZXNbZXZ0LnR5cGVdXG4gICAgPyB7IHg6IGV2dC5jbGllbnRYLCB5OiBldnQuY2xpZW50WSB9XG4gICAgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBmb3JtYXREYXRhU2VsZWN0b3IoZWxlbWVudCwgYXR0cmlidXRlKSB7XG4gIHJldHVybiBgWyR7YXR0cmlidXRlfT0ke2VsZW1lbnQuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSl9XWA7XG59XG5cbndpbmRvdy5ldmVudFJlY29yZGVyID0gbmV3IEV2ZW50UmVjb3JkZXIoKTtcbndpbmRvdy5ldmVudFJlY29yZGVyLnN0YXJ0KCk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/content-scripts/index.js\n");

/***/ })

})